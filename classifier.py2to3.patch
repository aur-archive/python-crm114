--- crm114/classifier.py	2014-01-30 03:30:27.467213541 -0500
+++ crm114/modified_classifier.py3	2014-02-07 23:13:40.753713431 -0500
@@ -1,7 +1,8 @@
 import os
 import string
+import subprocess
 
 CRM_BINARY = 'crm'
 
 CLASSIFICATION_TYPE = '<osb unique microgroom>'
 CLASSIFICATION_EXT = '.css'
@@ -38,22 +39,24 @@
     def classify(self, text):
         """ Instructs the classifier to categorize the text, and return the
         name of the category that best matches the text. """
 
         # need to escape path separator for the regex matching
-        path = string.replace(self.path, os.sep, '\\%s' % os.sep)
+        path = str.replace(self.path, os.sep, '\\%s' % os.sep)
 
         command = CRM_BINARY + (CLASSIFY_CMD % (CLASSIFICATION_TYPE,
                                                 self.file_list_string(),
                                                 path,
                                                 CLASSIFICATION_EXT))
-        fin, fout = os.popen2(command)
+        p = subprocess.Popen(command, shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, close_fds=True)
+        (fin, fout) = (p.stdin, p.stdout)
         #print('- Command:   %s' % command)
-        fin.write(text)
+        fin.write(bytes(text + "\n", 'utf-8'))
+        fin.flush()
         fin.close()
 
-        output_list = string.split(fout.readline())
+        output_list = str.split(str(fout.readline(), encoding='utf-8'))
         fout.close()
 
         if output_list is None:
             return ('', 0.0)
         else:
@@ -79,11 +82,11 @@
         # Builds a file path given a category name
         def _file_path(category):
             return os.path.join(self.path, category + CLASSIFICATION_EXT)
 
         # Return list of all category paths
-        return map(_file_path, self.categories)
+        return list(map(_file_path, self.categories))
 
     # return a list of classification files as a string
     def file_list_string(self):
         """ Returns a list of classification files as a string. """
         return ' '.join(self.file_list())
